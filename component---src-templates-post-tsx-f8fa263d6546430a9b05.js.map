{"version":3,"file":"component---src-templates-post-tsx-f8fa263d6546430a9b05.js","mappings":"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","sources":["webpack://chowson.github.io/./src/templates/post.tsx"],"sourcesContent":["import * as React from 'react';\nimport { graphql, HeadFC, Link, PageProps } from 'gatsby';\nimport Layout from '../components/layout';\nimport kebabCase from 'lodash/kebabCase';\nimport { SEO } from '../components/seo';\nimport '../styles/github-markdown.css';\nimport '../styles/prism-nord.css';\n\nconst BlogPostTemplate = ({\n  data, // this prop will be injected by the GraphQL query below.\n}: PageProps<Queries.BlogPostTemplateQuery>) => {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n\n  const frontmatter = markdownRemark?.frontmatter;\n  return (\n    <Layout>\n      <div className=\"container-inner mx-auto my-8\">\n        <article>\n          <h1 className=\"text-4xl font-bold leading-tight\">{frontmatter?.title}</h1>\n          <div className=\"text-xl text-gray-700 dark:text-gray-500\">{frontmatter?.date}</div>\n          <div className=\"text-sm text-gray-700 dark:text-gray-500 mb-4\">{markdownRemark?.timeToRead} min read</div>\n          <div className=\"flex mb-8 text-sm\">\n            {frontmatter?.tags?.map(tag => (\n              <Link\n                to={`/tag/${kebabCase(tag ?? '')}`}\n                key={tag}\n                className=\"bg-gray-300 rounded-full px-4 py-2 mr-4 text-brand-900 hover:bg-brand-300\"\n              >\n                {tag}\n              </Link>\n            ))}\n          </div>\n          <div className=\"markdown-body mb-8\" dangerouslySetInnerHTML={{ __html: markdownRemark?.html ?? '' }} />\n          {(markdownRemark?.frontmatter?.references?.length ?? 0) > 0 && (\n            <div className=\"mb-6 pt-6 border-t-1 border-gray-600\">\n              <h2 className=\"text-xl\">References</h2>\n              <ul className=\"list-disc list-inside\">\n                {frontmatter?.references?.map(\n                  reference =>\n                    reference && (\n                      <li key={reference}>\n                        <a\n                          className=\"external mb-1 inline-block\"\n                          style={{ padding: '5px 0' }}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                          href={reference.split('|')[0]}\n                        >\n                          {reference.split('|')[1]}\n                        </a>\n                      </li>\n                    ),\n                )}\n              </ul>\n            </div>\n          )}\n          <div className=\"mb-8 pt-2 border-t-3 border-double border-gray-600\">\n            <Link to=\"/\" className=\"font-bold uppercase\">\n              Back to Blog\n            </Link>\n          </div>\n        </article>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const Head: HeadFC<Queries.BlogPostTemplateQuery> = ({ data }) => (\n  <SEO title={data.markdownRemark?.frontmatter?.title}>\n    <script type=\"application/ld+json\">\n      {JSON.stringify(\n        {\n          '@context': 'https://schema.org',\n          '@type': 'BlogPosting',\n          headline: data.markdownRemark?.frontmatter?.title,\n          datePublished: data.markdownRemark?.frontmatter?.dateIso,\n          dateModified: data.markdownRemark?.frontmatter?.dateIso,\n          mainEntityOfPage: {\n            '@type': 'WebPage',\n            '@id': `https://chowson.github.io${data.markdownRemark?.frontmatter?.path}`,\n          },\n          author: [\n            {\n              '@type': 'Person',\n              name: 'Chris Howson',\n              url: 'https://github.com/chowson',\n            },\n          ],\n          publisher: {\n            '@type': 'Organization',\n            name: 'chowson.github.io',\n            logo: {\n              '@type': 'ImageObject',\n              url: 'https://chowson.github.io/images/logo.png',\n            },\n          },\n          image: 'https://chowson.github.io/images/logo.png',\n          description: data.markdownRemark?.frontmatter?.description,\n        },\n        null,\n        2,\n      )}\n    </script>\n  </SEO>\n);\n\nexport const query = graphql`\n  query BlogPostTemplate($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        path\n        date(formatString: \"MMMM DD, YYYY\")\n        dateIso: date\n        tags\n        references\n        description\n      }\n      html\n      timeToRead\n    }\n  }\n`;\n"],"names":["_ref","_frontmatter$tags","_markdownRemark$html","_markdownRemark$front","_markdownRemark$front2","_markdownRemark$front3","_frontmatter$referenc","data","markdownRemark","frontmatter","React","Layout","className","title","date","timeToRead","tags","map","tag","Link","to","kebabCase","key","dangerouslySetInnerHTML","__html","html","references","length","reference","style","padding","target","rel","href","split","Head","_ref2","_data$markdownRemark","_data$markdownRemark$","_data$markdownRemark2","_data$markdownRemark3","_data$markdownRemark4","_data$markdownRemark5","_data$markdownRemark6","_data$markdownRemark7","_data$markdownRemark8","_data$markdownRemark9","_data$markdownRemark10","_data$markdownRemark11","SEO","type","JSON","stringify","headline","datePublished","dateIso","dateModified","mainEntityOfPage","path","author","name","url","publisher","logo","image","description"],"sourceRoot":""}