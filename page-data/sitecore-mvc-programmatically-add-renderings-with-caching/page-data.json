{"componentChunkName":"component---src-templates-post-tsx","path":"/sitecore-mvc-programmatically-add-renderings-with-caching/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Programmatically Adding Sitecore MVC Renderings with Caching","path":"/sitecore-mvc-programmatically-add-renderings-with-caching","date":"August 26, 2015","dateIso":"2015-08-26T16:18:00.000Z","tags":["sitecore","mvc"],"references":[],"description":"Sitecore helper method to add a rendering within a view with caching"},"html":"<p>Sitecore provides a suite of web controls for Web Forms development within the\n<em>Sitecore.Web.UI.WebControls</em> namespace and one of these controls is <em>Sublayout</em>.\nThis was used to programmatically add a Sitecore sublayout to the current sublayout.\nThis control inherits from <em>Sitecore.Web.UI.WebControls.WebControl</em> which contains\nall of the standard caching properties such as <em>Cacheable, VaryByData, VaryByQueryString</em>\netc. Example usage of the <em>Sublayout</em> control:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span>sc<span class=\"token punctuation\">:</span><span class=\"token class-name\">Sublayout</span> runat<span class=\"token operator\">=</span><span class=\"token string\">\"server\"</span> Path<span class=\"token operator\">=</span><span class=\"token string\">\"/layouts/Header.ascx\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span> Cacheable<span class=\"token operator\">=</span><span class=\"token string\">\"True\"</span> VaryByData<span class=\"token operator\">=</span><span class=\"token string\">\"True\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>sc<span class=\"token punctuation\">:</span>Sublayout<span class=\"token operator\">></span></code></pre></div>\n<p>In Sitecore MVC, the equivalent of the <em>Sublayout</em> control is to use the <em>Rendering</em>\nmethod on the <em>Sitecore.Mvc.Helpers.SitecoreHelper</em> within the view. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@Html<span class=\"token punctuation\">.</span><span class=\"token function\">Sitecore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Rendering</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{00000000-0000-0000-0000-000000000000}\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>One important thing to note is that when adding a rendering programmatically, the\ncache settings specified on the sublayout/rendering definition item in Sitecore are\n<strong>NOT</strong> picked up. To define cache settings on the <em>Rendering</em> method, you must\nuse a method overload to specify the caching behaviour on the rendering. There is no\nintuitive overload where you can pass in values for <em>Cacheable</em> or <em>VaryByData</em> as with\nthe <em>WebControl</em>. To add caching to the example above, an anonymous type needs to be\ndefined, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@Html<span class=\"token punctuation\">.</span><span class=\"token function\">Sitecore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Rendering</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{00000000-0000-0000-0000-000000000000}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">{</span> Cacheable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> Cache_VaryByData <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>There is no IntelliSense when defining this and so it is hard to remember the property\nnames without decompiling the Sitecore code or to look back at another project to see\nhow you achieved this previously. The following code provides a method which accepts\na strongly typed class to define the caching properties. It also provides the ability\nto cache a rendering by <em>TimeSpan</em> which could come in useful and isn't exposed as part\nof the standard Sitecore caching functionality.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RenderingCachingSettings</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span><span class=\"token punctuation\">?</span></span> Cacheable <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">TimeSpan<span class=\"token punctuation\">?</span></span> Cache_Timeout <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span><span class=\"token punctuation\">?</span></span> Cache_VaryByData <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span><span class=\"token punctuation\">?</span></span> Cache_VaryByDevice <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span><span class=\"token punctuation\">?</span></span> Cache_VaryByLogin <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span><span class=\"token punctuation\">?</span></span> Cache_VaryByParameters <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span><span class=\"token punctuation\">?</span></span> Cache_VaryByQueryString <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span><span class=\"token punctuation\">?</span></span> Cache_VaryByUser <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SitecoreHelperExtensions</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">HtmlString</span> <span class=\"token function\">CachedRendering</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">SitecoreHelper</span> sitecoreHelper<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> pathOrId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RenderingCachingSettings</span> renderingCachingSettings<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> sitecoreHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Rendering</span><span class=\"token punctuation\">(</span>pathOrId<span class=\"token punctuation\">,</span> renderingCachingSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This method is then used in a view such as:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">@Html<span class=\"token punctuation\">.</span><span class=\"token function\">Sitecore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">CachedRendering</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{00000000-0000-0000-0000-000000000000}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RenderingCachingSettings</span> <span class=\"token punctuation\">{</span> Cacheable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> Cache_VaryByQueryString <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n@Html<span class=\"token punctuation\">.</span><span class=\"token function\">Sitecore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">CachedRendering</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{00000000-0000-0000-0000-000000000000}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RenderingCachingSettings</span> <span class=\"token punctuation\">{</span> Cacheable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> Cache_Timeout <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TimeSpan</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>If the extension method does not show up, you will need to ensure you have the\nnamespace imported where it is defined. Adding the namespace to the <em>web.config</em>\nwithin the views directory will ensure it is available for all views, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>system.web.webPages.razor</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pages</span> <span class=\"token attr-name\">pageBaseType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>System.Web.Mvc.WebViewPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>add</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your.Namespace<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pages</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>system.web.webPages.razor</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span></code></pre></div>","timeToRead":2}},"pageContext":{"id":"52611cf1-9b48-5db7-b8e6-1c3e8322103a"}},"staticQueryHashes":["1942088059"],"slicesMap":{}}