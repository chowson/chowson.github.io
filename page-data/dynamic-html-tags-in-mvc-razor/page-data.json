{"componentChunkName":"component---src-templates-post-tsx","path":"/dynamic-html-tags-in-mvc-razor/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Dynamic HTML Tags in MVC Razor","path":"/dynamic-html-tags-in-mvc-razor","date":"June 01, 2016","dateIso":"2016-06-01T09:12:00.000Z","tags":["mvc"],"references":[],"description":"Html.BeginForm for any HTML Tag"},"html":"<p>The HTML helper method <em>Html.BeginForm</em> is a useful way to dynamically create\n<code class=\"language-text\">&lt;form></code> tags. It would be useful to be able to do this for other HTML\ntags so that the HTML output is dynamically generated keeping your markup clean.</p>\n<h2>Example</h2>\n<p>In the following example, <code class=\"language-text\">_dataProvider.GetAdvertDataAttributes()</code> returns\nan <code class=\"language-text\">IDictionary&lt;string, object></code> and defines any additional data attributes\nrequired on the component:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// Controller</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AdvertModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodel<span class=\"token punctuation\">.</span>AdvertImageSrc <span class=\"token operator\">=</span> <span class=\"token string\">\"/path/to/image.jpg\"</span><span class=\"token punctuation\">;</span>\nmodel<span class=\"token punctuation\">.</span>AdvertImageAlt <span class=\"token operator\">=</span> <span class=\"token string\">\"Advert Image\"</span>\nmodel<span class=\"token punctuation\">.</span>AdvertClass <span class=\"token operator\">=</span> _dataProvider<span class=\"token punctuation\">.</span><span class=\"token function\">GetAdvertClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodel<span class=\"token punctuation\">.</span>AdvertDataAttributes <span class=\"token operator\">=</span> _dataProvider<span class=\"token punctuation\">.</span><span class=\"token function\">GetAdvertDataAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Usually <em>AdvertDataAttributes</em> would require expanding into a string to output in\nthe Razor view, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- Razor View --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@Model.AdvertClass<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">@Model.AdvertDataAttributesString</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@Model.AdvertImageSrc<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@Model.AdvertImageAlt<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>This requires code to convert the dictionary into a string ensuring that the attributes\nare encoded properly using <code class=\"language-text\">HttpUtility.HtmlAttributeEncode</code>. Also, it could lead to\n<code class=\"language-text\">class=\"\"</code> being output to the page.</p>\n<h2>Solution</h2>\n<p>Using the extension method for <code class=\"language-text\">System.Web.Mvc.HtmlHelper</code> and supporting <em>MvcTag</em>\nclass found at the end of the post, it becomes a lot simpler to create the dynamic\nHTML required.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// Razor View</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span>Html<span class=\"token punctuation\">.</span><span class=\"token function\">BeginTag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> Model<span class=\"token punctuation\">.</span>AdvertClass<span class=\"token punctuation\">,</span> Model<span class=\"token punctuation\">.</span>AdvertDataAttributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">img</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"@Model.AdvertImageSrc\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"@Model.AdvertImageAlt\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- HTML output --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>advert-container<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>advert1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/path/to/image.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Advert Image<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>The benefit of this is that if the model variables <em>AdvertClass</em>\nand <em>AdvertDataAttributes</em> were <em>null</em>, then the HTML output\nwould not have any empty attributes, i.e.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- HTML output --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/path/to/image.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Advert Image<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>Code</h2>\n<p>To achieve this, the following <em>HtmlHelper</em> extension method and\nsupporting <em>MvcTag</em> class are required:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// HtmlHelperExtensions.cs</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HtmlHelperExtensions</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">IDisposable</span> <span class=\"token generic-method\"><span class=\"token function\">BeginTag</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">HtmlHelper<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> htmlHelper<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> tag<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> className <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IDictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span> htmlAttributes <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>htmlAttributes <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">?</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MvcTag</span><span class=\"token punctuation\">(</span>htmlHelper<span class=\"token punctuation\">.</span>ViewContext<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RouteValueDictionary</span><span class=\"token punctuation\">(</span>htmlAttributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MvcTag</span><span class=\"token punctuation\">(</span>htmlHelper<span class=\"token punctuation\">.</span>ViewContext<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// MvcTag.cs</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MvcTag</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IDisposable</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">TagBuilder</span> _tagBuilder<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> _disposed<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">FormContext</span> _originalFormContext<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">ViewContext</span> _viewContext<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">TextWriter</span> _writer<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token function\">MvcTag</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ViewContext</span> viewContext<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> tag<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> className <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RouteValueDictionary</span> attributes <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>viewContext <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ArgumentNullException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"viewContext\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    \n        _viewContext <span class=\"token operator\">=</span> viewContext<span class=\"token punctuation\">;</span>\n        _writer <span class=\"token operator\">=</span> viewContext<span class=\"token punctuation\">.</span>Writer<span class=\"token punctuation\">;</span>\n        _originalFormContext <span class=\"token operator\">=</span> viewContext<span class=\"token punctuation\">.</span>FormContext<span class=\"token punctuation\">;</span>\n        viewContext<span class=\"token punctuation\">.</span>FormContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FormContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        _tagBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TagBuilder</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _tagBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">MergeAttributes</span><span class=\"token punctuation\">(</span>attributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            _tagBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">AddCssClass</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    \n        <span class=\"token function\">Begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        GC<span class=\"token punctuation\">.</span><span class=\"token function\">SuppressFinalize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        _writer<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MvcHtmlString</span><span class=\"token punctuation\">(</span>_tagBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span>TagRenderMode<span class=\"token punctuation\">.</span>StartTag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">End</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        _writer<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _writer<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MvcHtmlString</span><span class=\"token punctuation\">(</span>_tagBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span>TagRenderMode<span class=\"token punctuation\">.</span>EndTag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> disposing<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_disposed<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            _disposed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">End</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_viewContext <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                _viewContext<span class=\"token punctuation\">.</span><span class=\"token function\">OutputClientValidation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                _viewContext<span class=\"token punctuation\">.</span>FormContext <span class=\"token operator\">=</span> _originalFormContext<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n    \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">EndForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":2}},"pageContext":{"id":"39e6dff5-0e42-5b58-9945-1b57a9b04cf3"}},"staticQueryHashes":["1942088059"],"slicesMap":{}}