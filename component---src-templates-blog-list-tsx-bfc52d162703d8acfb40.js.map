{"version":3,"file":"component---src-templates-blog-list-tsx-bfc52d162703d8acfb40.js","mappings":"qOAkDA,UApCyBA,IAA0F,IAAzF,KAAEC,EAAI,YAAEC,GAA4EF,EAC5G,MAAMG,EAAQF,EAAKG,kBAAkBC,MACrC,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAI,CAACC,YAAY,0CAA8CC,aAAY,QAAUR,EAAYS,YAAeC,OAAO,IAExHN,EAAAA,cAAA,OAAKO,UAAU,iCACZV,EAAMW,KAAIC,IAAI,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACbd,EAAAA,cAAA,WAASe,IAAKN,EAAKO,KAAKC,GAAIV,UAAU,uCACpCP,EAAAA,cAAA,MAAIO,UAAU,sBACZP,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAA+B,QAA7BT,EAAuB,QAAvBC,EAAEF,EAAKO,KAAKI,mBAAW,IAAAT,OAAA,EAArBA,EAAuBU,YAAI,IAAAX,EAAAA,EAAI,IAAKH,UAAU,qBAChC,QADmDK,EACxEH,EAAKO,KAAKI,mBAAW,IAAAR,OAAA,EAArBA,EAAuBU,QAG5BtB,EAAAA,cAAA,OAAKO,UAAU,4BACbP,EAAAA,cAAA,YAA4B,QAA5Ba,EAAOJ,EAAKO,KAAKI,mBAAW,IAAAP,OAAA,EAArBA,EAAuBU,MAC9BvB,EAAAA,cAAA,YAAM,OACNA,EAAAA,cAAA,YAAOS,EAAKO,KAAKQ,WAAW,cAG9BxB,EAAAA,cAAA,OAAKO,UAAU,gBAAqC,QAAvBO,EAAEL,EAAKO,KAAKI,mBAAW,IAAAN,OAAA,EAArBA,EAAuBW,aAEtDzB,EAAAA,cAAA,OAAKO,UAAU,QACbP,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAG,iBAAiBZ,UAAU,uBAAsB,cAIpD,IAGXX,EAAY8B,SAAW,GAAK1B,EAAAA,cAAC2B,EAAAA,EAAe,CAACC,KAAK,QAAQC,WAAYjC,EAAY8B,SAAUrB,YAAaT,EAAYS,eAEjH,EAMN,MAAMyB,EAA8CA,IAAM9B,EAAAA,cAAC+B,EAAAA,EAAG,CAACT,MAAM,Q","sources":["webpack://chowson.github.io/./src/templates/blog-list.tsx"],"sourcesContent":["import React from 'react';\nimport { graphql, HeadFC, Link, PageProps } from 'gatsby';\nimport Layout from '../components/layout';\nimport Hero from '../components/hero';\nimport { SEO } from '../components/seo';\nimport { PaginationPosts } from '../components/pagination-posts';\n\ntype BlogListPageContext = {\n  limit: number;\n  skip: number;\n  numPages: number;\n  currentPage: number;\n};\n\nconst BlogListTemplate = ({ data, pageContext }: PageProps<Queries.BlogListTemplateQuery, BlogListPageContext>) => {\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <Layout>\n      <Hero leadingText=\"Sitecore, C# &amp; ASP.NET Development Blog\" leadingTight={`Page ${pageContext.currentPage}`} large={false} />\n\n      <div className=\"container-inner mx-auto py-16\">\n        {posts.map(post => (\n          <article key={post.node.id} className=\"post border-gray-400 border-b mb-12\">\n            <h2 className=\"text-3xl font-bold\">\n              <Link to={post.node.frontmatter?.path ?? '#'} className=\"text-copy-primary\">\n                {post.node.frontmatter?.title}\n              </Link>\n            </h2>\n            <div className=\"text-copy-secondary mb-4\">\n              <span>{post.node.frontmatter?.date}</span>\n              <span> &middot; </span>\n              <span>{post.node.timeToRead} min read</span>\n            </div>\n\n            <div className=\"text-lg mb-4\">{post.node.frontmatter?.description}</div>\n\n            <div className=\"mb-8\">\n              <Link to=\"post.node.path\" className=\"font-bold uppercase\">\n                Read post\n              </Link>\n            </div>\n          </article>\n        ))}\n\n        {pageContext.numPages > 1 && <PaginationPosts base=\"/blog\" totalPages={pageContext.numPages} currentPage={pageContext.currentPage} />}\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogListTemplate;\n\nexport const Head: HeadFC<Queries.BlogPostTemplateQuery> = () => <SEO title=\"Blog\" />;\n\nexport const query = graphql`\n  query BlogListTemplate($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n            path\n            date(formatString: \"MMMM D, Y\")\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","data","pageContext","posts","allMarkdownRemark","edges","React","Layout","Hero","leadingText","leadingTight","currentPage","large","className","map","post","_post$node$frontmatte","_post$node$frontmatte2","_post$node$frontmatte3","_post$node$frontmatte4","_post$node$frontmatte5","key","node","id","Link","to","frontmatter","path","title","date","timeToRead","description","numPages","PaginationPosts","base","totalPages","Head","SEO"],"sourceRoot":""}